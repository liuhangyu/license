/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */




/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


/*
创建license对象
dir 存放license.dat的文件夹(监控文件夹使用)
productName 在二进制中每个产品的英文名称
logPath 指定路径的license.log路径

成功返回空字符
失败返回errmsg
*/

extern char* NewLicense(GoString p0, GoString p1, GoString p2);

/*
释放license对象
*/

extern char* FreeLicense();

/*
licenseDir 存放license.dat的文件夹(监控文件夹使用)
productName 在二进制中每个产品的英文名称

失败错误信息查看:errors.go中定义
*/

extern int VerifyLicense(GoString p0, GoString p1);

/*
licenseDir 存放license.dat的文件夹(监控文件夹使用)
productName 在二进制中每个产品的英文名称

返回:
失败返回"FAIL"
成功返回定义的KV配置项
*/

extern char* ReadLicense(GoString p0, GoString p1);

/*
licenseDir 存放license.dat的文件夹(监控文件夹使用)
productName 在二进制中每个产品的英文名称

返回值:
0已过期
-1失败
>0 剩余时间(剩余未过期的秒数)
*/

extern long long int GetExpireSec(GoString p0, GoString p1);

#ifdef __cplusplus
}
#endif
